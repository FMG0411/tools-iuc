<tool id="panta" name="PanTA" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="24.2" license="MIT">
    <description>Efficient inference of large prokaryotic pangenomes with PanTA</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <edam_topics>
        <edam_topic>topic_3053</edam_topic> 
        <edam_topic>topic_3299</edam_topic> 
        <edam_topic>topic_3307</edam_topic>
    </edam_topics>
    <edam_operations>   
        <edam_operation>operation_2945</edam_operation>
        <edam_operation>operation_2424</edam_operation>
        <edam_operation>operation_3432</edam_operation>
    </edam_operations>
    <xrefs>
        <xref type="bio.tools">PanTA</xref>
    </xrefs>
    <expand macro="requirements"/>

    <command detect_errors="exit_code"><![CDATA[        
        mkdir -p out/ &&
        panta main ## not sure if that is correct
            #if $input_gff:
                -g ${str($input1).replace(',', ' ')}
            #end if
            #if $input_tsv != 'None':
                -f '$input_tsv'
            #end if
            -o out
            $dont_split
            --blast '$blast'
            --identity '$identity'
            --LD '$LD'
            --AL '$AL'
            --AS '$AS'
            --evalue '$evalue'
            --threads '$threads'
            --table '$table'
            #if $alignment != 'None':
                --alignment '$alignment'
            #end if
    ]]></command>

    <inputs>
        <param type="data" name="input_gff" format="gff3" multiple="true" label="Select input files to analyze" help="Select the files you wish to analyze with PanTA, must be in gff3 format."/>
        <param type="data" name="input_tsv" format="tsv" multiple="false" label="Select input file to analyze" help="Select the file you wish to analyze with PanTA, must be in tsv format."/>
        <param argument="--dont-split" type="boolean" truevalue="--dont-split" falsevalue="" label="Dont split" help="Decide for or against splitting paralog clusters (default: False)"/>
        
        <param argument="--blast" type="select" label="Alignment method" help="Method for all-against-all alignment (default: diamond)">
            <option value="diamond" selected="True">Diamond</option>
            <option value="blast">Blast</option>
        </param>

        <param argument="--identity" type="float" value="0.7" label="Minimum percentage identity" help="Set the minimum percentage identity (default: 0.7)"/>
        <param argument="--LD" type="float" value="0.7" label="Length difference cutoff" help="Set the length difference cutoff between two sequences (default: 0.7)"/>
        <param argument="--AL" type="float" value="0" label="Alignment coverage for the longer sequence" help="Set the alignment coverage for the longer sequence (default: 0)"/>
        <param argument="--AS" type="float" value="0" label="Alignment coverage for the shorter sequence" help="Set the alignment coverage for the shorter sequence (default: 0)"/>
        <param argument="--evalue" type="float" value="1e-06" label="Blast evalue" help="Maximum expected value for reporting hits and lower values are stricter (default: 1e-06)"/>
        <param argument="--threads" type="integer" label="Number of threads to use" help="Set the number of threads to use, 0 for all (default: 0)"/>
        <param argument="--table" type="integer" label="Codon table" help="Set the codon table (default: 11)"/>

        <param argument="--alignment" type="select" label="Run alignment for each gene cluster (default: None)">
            <option value="None" selected="True">None</option>
            <option value="nucleotide">Nucleotide</option>
            <option value="protein">Protein</option>
        </param>
    </inputs>

    <outputs>
        <!--Basic PanTA main outputs -->
        <data format="json" name="annotated_clusters" label="${tool.name} on ${on_string} Annotated Clusters" from_work_dir="out/annotated_clusters.json"/>
        <data format="tsv" name="blast_output" label="${tool.name} on ${on_string} Blast" from_work_dir="out/blast.tsv"/>
        <data format="json" name="clusters" label="${tool.name} on ${on_string} Clusters" from_work_dir="out/clusters.json"/>
        <data format="csv" name="gene_annotation" label="${tool.name} on ${on_string} Gene Annotation" from_work_dir="out/gene_annotation.csv"/>
        <data format="csv" name="gene_position" label="${tool.name} on ${on_string} Gene Position" from_work_dir="out/gene_position.csv"/>
        <data format="csv" name="gene_presence_absence" label="${tool.name} on ${on_string} Gene Presence Absence" from_work_dir="out/gene_presence_absence.csv"/>
        <data format="txt" name="gene_presence_absence_Rtab" label="${tool.name} on ${on_string} Gene Presence Absence Rtab" from_work_dir="out/gene_presence_absence.Rtab"/>
        <data format="fasta" name="representative_clusters_nucl" label="${tool.name} on ${on_string} Representative Clusters Nucl" from_work_dir="out/representative_clusters_nucl.fasta"/>
        <data format="fasta" name="representative_clusters_prot" label="${tool.name} on ${on_string} Representative Clusters Prot" from_work_dir="out/representative_clusters_prot.fasta"/>
        <data format="fasta" name="representative" label="${tool.name} on ${on_string} Representative" from_work_dir="out/representative.fasta"/>
        <data format="json" name="samples" label="${tool.name} on ${on_string} Samples" from_work_dir="out/samples.json"/>
        <data format="txt" name="summary_statistics" label="${tool.name} on ${on_string} Summary Statistics" from_work_dir="out/summary_statistics.txt"/>
    </outputs>

    <tests>
        <!--Basic PanTA main test -->
        <test expect_num_outputs="12">
            <!--Minimum required parameters to run a test -->
            <param name="input_gff" value="GCA_021342655.1.gff,GCA_021534865.1.gff,GCA_021697815.1.gff,GCA_021890555.1.gff" ftype="gff3"/>
            <param name="input_tsv" value="" ftype="tsv"/>
            <param name="threads" value="0"/>
            <param name="table" value="11"/>

            <output name="annotated_clusters" ftype="json">
                <assert_contents>
                    <has_text text="GCA_021342655.1-NZ_JAJTPH010000093.1-5475-cds-WP_000557454.1"/>
                    <has_n_lines n="96580"/>
                </assert_contents>
            </output>
            <output name="blast_output" ftype="tsv">
                <assert_contents>
                    <has_text text="GCA_021342655.1-NZ_JAJTPH010000101.1-3-cds-WP_233337042.1"/>
                    <has_n_lines n="30697"/>
                </assert_contents>
            </output>
            <output name="clusters" ftype="json">
                <assert_contents>
                    <has_text text="GCA_021890555.1-NZ_JAKLOD010000002.1-4878-cds-L3T02_RS24235"/>
                    <has_n_lines n="24266"/>
                </assert_contents>
            </output>
            <output name="gene_annotation" ftype="csv">
                <assert_contents>
                    <has_text text="GCA_021342655.1-NZ_JAJTPH010000101.1-3-cds-WP_233337042.1,GCA_021342655.1,NZ_JAJTPH010000101.1,777,,phage terminase large subunit family protein,0,-"/>
                    <has_n_lines n="19712"/>
                </assert_contents>
            </output>
            <output name="gene_position" ftype="csv">
                <assert_contents>
                    <has_text text="GCA_021342655.1,NZ_JAJTPH010000110.1,GCA_021342655.1-NZ_JAJTPH010000110.1-188-cds-WP_000422741.1"/>
                    <has_n_lines n="195"/>
                </assert_contents>
            </output>
            <output name="gene_presence_absence" ftype="csv">
                <assert_contents>
                    <has_text text="DUF6531 domain-containing protein, RHS element core protein"/>
                    <has_n_lines n="7682"/>
                </assert_contents>
            </output>
            <output name="gene_presence_absence_Rtab" ftype="txt">
                <assert_contents>
                    <has_text text="groups_0	0	1	0	1"/>
                    <has_n_lines n="7682"/>
                </assert_contents>
            </output>
            <output name="representative_clusters_nucl" ftype="fasta">
                <assert_contents>
                    <has_text text="GGTCTGCCCCACCGGCATCGACATTCGCGACGGCCTGCAGATCGAGTGCATTGGTTGCGC"/>
                    <has_n_lines n="124176"/>
                </assert_contents>
            </output>
            <output name="representative_clusters_prot" ftype="fasta">
                <assert_contents>
                    <has_text text="GLPHRHRHSRRPADRVHWLRRLHRCLRQHHGQDGLPQGPDQLHNRTQSFRTEDPSAAPTP"/>
                    <has_n_lines n="48968"/>
                </assert_contents>
            </output>
            <output name="representative" ftype="fasta">
                <assert_contents>
                    <has_text text="RIEGSVWPKSIRGSTPKVRGTCQIERAASESPHFMRFHVACPHCGEEQYLKFGDKETPFGLKWTPDDPSSVFYLCEHNACVIRQQELDFTDARYICEKTGIWTRDGILWFSSSGEEIEPPDSVTFHIWTAYSPFTTWVQIVKDWMKTKGDTGKRKTFVNTTLGETWEAKIGERPDAEVMAERKEHYSAPVPDRVAYLTAGIDSQLDRYEMRVWGWGPGEESWLIDRQIIMGRHDDEQTLLRVDEAINKTYTRRNGAEMS"/>
                    <has_n_lines n="18795"/>
                </assert_contents>
            </output>
            <output name="samples" ftype="json">
                <assert_contents>
                    <has_text text="GCA_021342655.1"/>
                    <has_n_lines n="22"/>
                </assert_contents>
            </output>
            <output name="summary_statistics" ftype="txt">
                <assert_contents>
                    <has_text text="Soft core genes"/>
                    <has_n_lines n="6"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[

**What it does**

Instert text 

**Input**

Instert text 

**Output**

Instert text 


    ]]></help>
    <citations>
        <citation type="doi">1234</citation>
    </citations>
</tool>