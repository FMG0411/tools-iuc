<tool id="hyphy_absrel" name="HyPhy-aBSREL" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>adaptive Branch Site Random Effects Likelihood</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="bio_tools"/>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        @SYMLINK_FILES@
        ln -s '$absrel_output' ${input_file}.aBSREL.json &&
        #if $intermediate_fits_flag:
        ln -s '$intermediate_fits_output' intermediate_fits.json &&
        #end if
        @HYPHYMP@ absrel
            --alignment ./$input_file
            @INPUT_TREE@
            --code '$gencodeid'
            @branch_options@
            --output '$absrel_output'
            --multiple-hits $multiple_hits
            @srv_options@
            --blb $blb
            #if $intermediate_fits_flag:
            --intermediate-fits "intermediate_fits.json"
            #end if
            --kill-zero-lengths $kill_zero_lengths
        @ERRORS@
        ]]></command>
    <inputs>
        <expand macro="inputs"/>
        <param name="gencodeid" argument="--code" type="select" label="Which genetic code to use">
            <option value="Universal" selected="true">Universal</option>
            <option value="Vertebrate-mtDNA">Vertebrate-mtDNA</option>
            <option value="Yeast-mtDNA">Yeast-mtDNA</option>
            <option value="Mold-Protozoan-mtDNA">Mold-Protozoan-mtDNA</option>
            <option value="Invertebrate-mtDNA">Invertebrate-mtDNA</option>
            <option value="Ciliate-Nuclear">Ciliate-Nuclear</option>
            <option value="Echinoderm-mtDNA">Echinoderm-mtDNA</option>
            <option value="Euplotid-Nuclear">Euplotid-Nuclear</option>
            <option value="Alt-Yeast-Nuclear">Alt-Yeast-Nuclear</option>
            <option value="Ascidian-mtDNA">Ascidian-mtDNA</option>
            <option value="Flatworm-mtDNA">Flatworm-mtDNA</option>
            <option value="Blepharisma-Nuclear">Blepharisma-Nuclear</option>
            <option value="Chlorophycean-mtDNA">Chlorophycean-mtDNA</option>
            <option value="Trematode-mtDNA">Trematode-mtDNA</option>
            <option value="Scenedesmus-obliquus-mtDNA">Scenedesmus-obliquus-mtDNA</option>
            <option value="Thraustochytrium-mtDNA">Thraustochytrium-mtDNA</option>
            <option value="Pterobranchia-mtDNA">Pterobranchia-mtDNA</option>
            <option value="SR1-and-Gracilibacteria">SR1-and-Gracilibacteria</option>
            <option value="Pachysolen-Nuclear">Pachysolen-Nuclear</option>
            <option value="Mesodinium-Nuclear">Mesodinium-Nuclear</option>
            <option value="Peritrich-Nuclear">Peritrich-Nuclear</option>
            <option value="Cephalodiscidae-mtDNA">Cephalodiscidae-mtDNA</option>
        </param>
        <param argument="--multiple-hits" type="select" label="Include support for multiple nucleotide substitutions">
            <option value="Double">Include branch-specific rates for double nucleotide substitutions</option>
            <option value="Double+Triple">Include branch-specific rates for double and triple nucleotide substitutions</option>
            <option value="None" selected="true">Use standard models which permit only single nucleotide changes to occur instantly</option>
        </param>
        <param argument="--blb" type="float" value="1.0" label="Bag of little bootstrap alignment resampling rate" help="[Advanced option]"/>
        <conditional name="srv_conditional">
            <param name="srv_enabled" type="select" label="Include synonymous rate variation">
                <option value="true" selected="true">Yes</option>
                <option value="false">No</option>
            </param>
            <when value="true">
                <param argument="--syn-rates" type="integer" value="3" min="1" max="10" label="Synonymous rate classes" help="The number of alpha rate classes to include in the model [1-10, default 3]"/>
            </when>
            <when value="false">
            </when>
        </conditional>
        <param name="intermediate_fits_flag" type="boolean" truevalue="true" falsevalue="false" label="Save intermediate fits" help="Use/save parameter estimates from 'initial-guess' model fits to a JSON file"/>
        <param argument="--kill-zero-lengths" type="select" label="Kill zero-length branches" help="Automatically delete internal zero-length branches for computational efficiency">
            <option value="Yes" selected="true">Automatically delete internal zero-length branches for computational efficiency (will not affect results otherwise)</option>
            <option value="Constrain">Keep zero-length branches, but constrain their values to 0</option>
            <option value="No">Keep all branches</option>
        </param>
        <expand macro="branches"/>
    </inputs>
    <outputs>
        <data name="absrel_output" format="hyphy_results.json" />
        <data name="intermediate_fits_output" format="json" from_work_dir="intermediate_fits.json" label="Intermediate Fits for ${tool.name} on ${on_string}">
            <filter>intermediate_fits_flag</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="input_file" ftype="fasta" value="absrel-in1.fa"/>
            <param name="input_nhx" ftype="nhx" value="absrel-in1.nhx"/>
            <output name="absrel_output">
                <assert_contents>
                    <has_size value="70000" delta="6000"/>
                    <has_text text="fits"/>
                    <has_text text="branch attributes"/>
                    <has_text text="Full adaptive model"/>
                </assert_contents>
            </output>
            <assert_stdout>
                <has_text text="found **1** branches under selection among **5** tested"/>
            </assert_stdout>
        </test>
        <test expect_num_outputs="1">
            <param name="input_file" ftype="fasta" value="absrel-in1.fa"/>
            <param name="input_nhx" ftype="nhx" value="absrel-in1.nhx"/>
            <param name="multiple_hits" value="Double" />
            <output name="absrel_output">
                <assert_contents>
                    <has_size value="60000" delta="5000"/>
                    <has_text text="fits"/>
                    <has_text text="branch attributes"/>
                    <has_text text="Full adaptive model"/>
                </assert_contents>
            </output>
            <assert_stdout>
                <has_text text="found **0** branches under selection among **5** tested"/>
                <has_text text="Branch-level rate at which 2 nucleotides are changed instantly"/>
            </assert_stdout>
        </test>
        <test expect_num_outputs="1">
            <param name="input_file" ftype="fasta" value="absrel-in1.fa"/>
            <param name="input_nhx" ftype="nhx" value="absrel-in1.nhx"/>
            <param name="multiple_hits" value="Double" />
            <param name="srv_conditional|srv_enabled" value="true" />
            <output name="absrel_output">
                <assert_contents>
                    <has_size value="58257" delta="1000"/>
                    <has_text text="fits"/>
                    <has_text text="branch attributes"/>
                    <has_text text="Full adaptive model"/>
                </assert_contents>
            </output>
            <assert_stdout>
                <has_text text="found **0** branches under selection among **5** tested"/>
               <has_text text="Branch-level rate at which 2 nucleotides are changed instantly"/>
               <has_text text="The following rate distribution for site-to-site **synonymous** rate variation was inferred"/>
            </assert_stdout>
        </test>
    </tests>
    <help><![CDATA[

aBSREL : Adaptive Branch-Site Random Effects Likelihood
=======================================================

What question does this method answer?
--------------------------------------

aBSREL (adaptive Branch-Site Random Effects Likelihood) is a powerful method for detecting episodic positive selection. It identifies instances where a proportion of sites along specific branches or lineages of a phylogeny have undergone positive selection.

Recommended Applications
------------------------

1.  **Detecting Episodic Diversifying Selection:** Ideal for exploratory testing to find evidence of lineage-specific positive diversifying selection in alignments of various sizes.
2.  **Targeted Branch Testing:** Suitable for targeted testing of branches hypothesized to be under positive selection, even in alignments that would be computationally prohibitive for older branch-site models.

Brief description
-----------------

aBSREL (Adaptive branch-site random effects likelihood) uses an adaptive
random effects branch-site model framework to test whether each branch
has evolved under positive selection, using a procedure which infers an
optimal number of rate categories per branch.


Input
-----

1. A *FASTA* sequence alignment.
2. A phylogenetic tree in the *Newick* format

Note: the names of sequences in the alignment must match the names of the sequences in the tree.


Output
------

A JSON file with analysis results (http://hyphy.org/resources/json-fields.pdf).

For each tested branch the analysis will infer the appropriate number of selective regimes,
and whether or not there is statistical evidence of positive selection on that branch.

A custom visualization module for viewing these results is available (see http://vision.hyphy.org/aBSREL for an example)

Further reading
---------------

http://hyphy.org/methods/selection-methods/#absrel


Tool options
------------
::

    --alignment         [required] An in-frame codon alignment in one of the formats supported by HyPhy

    --tree              [conditionally required] A phylogenetic tree (optionally annotated with {})

    --code              Which genetic code to use (see tool form for available options)

    --branches          Which branches should be tested for selection?
                            All [default]
                            Internal
                            Leaves
                            Unlabeled branches
                            Custom : Enter a branch label

    --multiple-hits     Include support for multiple nucleotide substitutions
                            Double : Include branch-specific rates for double nucleotide substitutions
                            Double+Triple : Include branch-specific rates for double and triple nucleotide substitutions
                            None [default] : Use standard models which permit only single nucleotide changes to occur instantly

    --srv               Include synonymous rate variation (default: No)
                            If Yes, then:
                                --syn-rates         The number alpha rate classes to include in the model [1-10, default 3]

    --blb               [Advanced option] Bag of Little Bootstraps (BLB) alignment resampling rate (default: 1.0). This parameter controls the fraction of sites to resample for each bootstrap replicate. BLB uses down/upsampling approaches to speed up inference for very long alignments by analyzing subsets of the data. For more details, see https://www.nature.com/articles/s43588-021-00129-5.

    --output            Write the resulting JSON to this file (default is to save to the same path as the alignment file + 'ABSREL.json')

    --intermediate-fits Use/save parameter estimates from 'initial-guess' model fits to a JSON file (default is not to save)

    --kill-zero-lengths Automatically delete internal zero-length branches for computational efficiency
                            Yes [default] : Automatically delete internal zero-length branches for computational efficiency (will not affect results otherwise)
                            Constrain : Keep zero-length branches, but constrain their values to 0
                            No : Keep all branches

    --save-fit          Save full adaptive aBSREL model fit to this file (default is not to save)



    ]]></help>
    <expand macro="citations">
        <citation type="doi">10.1093/molbev/msv022</citation>
    </expand>
</tool>
